def versions = [:]
versions.android_gradle_plugin = '3.3.1'
versions.kotlin = "1.3.20"
versions.kotlin_coroutines = "1.1.1"
versions.threetenabp = "1.1.2"
versions.timber = "4.7.1"
versions.ktx_core = "1.0.1"
versions.androidx_appcompat = "1.0.2"
versions.androidx_recyclerview = "1.0.0"
versions.material_components = "1.0.0"
versions.constraint_layout = "1.1.3"
versions.room = "2.0.0"
versions.paging = "2.1.0"
versions.lifecycle = "2.0.0"
versions.navigation = "1.0.0-rc02"
versions.glide = "4.8.0"
versions.dagger = "2.21"
versions.koin = "1.0.2"
versions.moshi = "1.8.0"
versions.ok_http = "3.12.1"
versions.retrofit = "2.5.1-SNAPSHOT"
versions.debugDb = "1.0.5"

ext.build_versions = [:]
def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

ext.deps = [:]
def deps = [:]

def plugin = [:]
plugin.android = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
plugin.kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
plugin.navigation_safe_args = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.plugin = plugin

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.coroutines_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"
kotlin.coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"
deps.kotlin = kotlin

deps.threetenabp = "com.jakewharton.threetenabp:threetenabp:$versions.threetenabp"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"

def firebase = [:]
firebase.core = "com.google.firebase:firebase-core:$versions.firebase_core"
firebase.analytics = "com.google.firebase:firebase-analytics:$versions.firebase_analytics"
firebase.cloud_messaging = "com.google.firebase:firebase-messaging:$versions.firebase_cloud_messaging"
firebase.performance_monitor = "com.google.firebase:firebase-perf:$versions.firebase_performance_monitor"
deps.firebase = firebase

def ktx = [:]
ktx.core = "androidx.core:core-ktx:$versions.ktx_core"
deps.ktx = ktx

def androidx = [:]
androidx.app_compat = "androidx.appcompat:appcompat:$versions.androidx_appcompat"
androidx.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidx_recyclerview"
deps.androidx = androidx

def material_components = [:]
material_components.core = "com.google.android.material:material:$versions.material_components"
deps.material_components = material_components

def constraint_layout = [:]
constraint_layout.core = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.constraint_layout = constraint_layout

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.migration = "androidx.room:room-migration:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
deps.room = room

def paging = [:]
paging.runtime = "androidx.paging:paging-runtime-ktx:$versions.paging"
deps.paging = paging

def navigation = [:]
navigation.fragment = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "android.arch.navigation:navigation-ui-ktx:$versions.navigation"
deps.navigation = navigation

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def koin = [:]
koin.scope = "org.koin:koin-androidx-scope:$versions.koin"
koin.viewmodel = "org.koin:koin-androidx-viewmodel:$versions.koin"
deps.koin = koin

def moshi = [:]
moshi.runtime = "com.squareup.moshi:moshi:$versions.moshi"
moshi.codegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
deps.moshi = moshi

def ok_http = [:]
ok_http.runtime = "com.squareup.okhttp3:okhttp:$versions.ok_http"
ok_http.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.ok_http"
deps.ok_http = ok_http

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
deps.retrofit = retrofit

def dev = [:]
dev.debugDb = "com.amitshekhar.android:debug-db:$versions.debugDb"
deps.dev = dev

ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven {
        url 'https://maven.fabric.io/public'
    }
    handler.maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

ext.addRepos = this.&addRepos